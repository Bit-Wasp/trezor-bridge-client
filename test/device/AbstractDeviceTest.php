<?php

declare(strict_types=1);

namespace BitWasp\Test\Trezor\Device;

use BitWasp\Trezor\Bridge\Client;
use BitWasp\Trezor\Bridge\Http\HttpClient;
use BitWasp\Trezor\Bridge\Session;

abstract class AbstractDeviceTest extends TestCase
{
    /**
     * @var HttpClient
     */
    protected $httpClient;

    /**
     * @var Client
     */
    protected $client;

    /**
     * @var Session
     */
    protected $session;

    /**
     * this needs to be filled out so we load
     * the desired device. the field is the devices
     * path.
     *
     * @var string
     */
    protected $targetDevice;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->httpClient = HttpClient::forUri("http://localhost:21325");
        $this->client = new Client($this->httpClient);
        $devices = $this->client->listDevices()->devices();
        if (empty($devices)) {
            throw new \RuntimeException("No devices returned");
        }

        foreach ($devices as $device) {
            if ($device->getPath() === $this->targetDevice) {
                $this->session = $this->client->acquire($device);
                return;
            }
        }

        throw new \RuntimeException("Failed to find target device");
    }
}
